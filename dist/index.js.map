{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///src/editor.vue","webpack:///./src/editor.vue?45e8","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./src/editor.vue","webpack:///./src/editor.vue?923d","webpack:///./src/editor.vue?6983","webpack:///./src/index.css","webpack:///./src/index.js","webpack:///external \"codemirror\"","webpack:///external \"codemirror/addon/display/fullscreen.js\"","webpack:///external \"codemirror/addon/display/placeholder.js\"","webpack:///external \"codemirror/addon/selection/active-line.js\"","webpack:///external \"codemirror/lib/codemirror.css\"","webpack:///external \"codemirror/mode/gfm/gfm.js\"","webpack:///external \"codemirror/mode/markdown/markdown.js\"","webpack:///external \"markdownparser\"","webpack:///external \"marked\""],"names":["MarkdownEditor","install","Vue","__md_editor_installed","component","Editor","window","use"],"mappings":"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A,EAsBA,KAtBA,EAsBA,GAtBA,EAsBA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA,SAHA,MAGA;AACA;AACA;AACA,SAHA,MAGA;AACA;AACA;AACA;;AACA;AACA,+BADA;AAEA;AAFA,WAGA;AACA,+BADA;AAEA;AAFA,SAHA;;AAQA;AACA;;AACA;AACA;AACA;AACA,SALA,MAKA;AACA;;AACA;AACA;AACA;AACA;AACA,OAlCA,MAkCA;AAEA;;AACA;AACA;AACA;AACA,SAHA,MAGA;AACA;AACA;AACA,SAHA,MAGA;AACA;AACA;;AACA;AAEA;AACA;AACA;;AAEA;AACA,KApFA;AAsFA,eAtFA,uBAsFA,IAtFA,EAsFA;AACA;AACA;AACA;AACA;AACA;AACA,8BADA;AAEA,wCAFA;AAGA;AAHA;AAKA;AACA,qBADA;AAEA,uBAFA;AAGA;AAHA;;AAKA;AACA;AACA;;AACA;AACA;AACA,WAFA,MAEA;AACA;AACA;;AACA;AACA,mBADA;AACA;AADA,aAEA;AACA,mBADA;AACA;AADA,WAFA;AAKA,SAZA,EAYA,CAZA;AAaA;AAEA,KArHA;AAuHA,SAvHA,iBAuHA,GAvHA,EAuHA;AACA;AACA;AACA;AAEA,uCALA,CAOA;;AAEA;AAAA,UACA,IADA;AAAA,UACA,IADA;;AAEA;AACA;;AACA;AACA;AACA,SAFA,MAEA;AACA;;AACA;AACA;AACA,WAFA,MAEA;AACA;AACA;AACA,SAPA,MAOA;AACA;AACA,SAFA,MAEA;AACA;AACA,SAFA,MAEA;AACA;AACA,SAFA,MAEA;AACA;AACA,SAFA,MAEA;AACA;AACA,SAFA,MAEA;AACA;AACA,SAFA,MAEA;AACA;AACA,SAFA,MAEA;AACA;AACA;AACA;;AACA;AACA,KAhKA;AAkKA,qBAlKA,6BAkKA,MAlKA,EAkKA,QAlKA,EAkKA,GAlKA,EAkKA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,SAHA;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BADA;AAEA;AAFA;AAIA,OARA,MAQA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;;AACA;AACA;AAEA,KAtMA;AAwMA,aAxMA,qBAwMA,GAxMA,EAwMA;AACA;;AACA;AACA,KA3MA;AA6MA,YA7MA,oBA6MA,GA7MA,EA6MA;AACA;;AACA;AACA,KAhNA;AAkNA,WAlNA,mBAkNA,GAlNA,EAkNA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AACA;;AAEA;AACA;;AACA;;AAEA;AACA;;AACA;;AAEA;AACA;;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;AACA;;AAEA;AACA;AAEA;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;AAEA;;AAEA;AACA;;AACA;;AAEA;AACA;;AACA;;AAEA;AACA;;AACA;;AAEA;AACA;;AACA;;AAEA;AAEA;AAEA;AAAA;AAAA;AACA;AAEA;AAEA;;AAEA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AA/FA;;AAmGA;AAEA,KA/TA;AAqUA,SArUA,mBAqUA;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,OAFA;;AAKA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAA;AAAA;AAAA;AACA;AACA;;AACA;AACA;AACA,yCAFA,CAGA;;AACA,OAJA;;AAMA;AACA;;AAEA;;AACA;AACA;AAEA,SAHA;AAIA,OARA;;AAUA;AAGA;AApYA,GA3MA;AAilBA,SAjlBA,qBAilBA;AAAA;;AAEA;AAAA;AAAA;AAEA,GArlBA;AAslBA,WAtlBA,uBAslBA;AACA;AACA;AAxlBA,G;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,cAAc;AACd,KAAK;AACL;AACA;AACA;AACA,SAAS,sCAAsC,yBAAyB,EAAE;AAC1E;AACA;AACA;AACA,aAAa,wCAAwC,gBAAgB,EAAE;AACvE;AACA;AACA;AACA;AACA,4CAA4C,iBAAiB;AAC7D,0BAA0B,oDAAoD;AAC9E;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,4BAA4B;AAC5B,mBAAmB;AACnB;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uCAAuC;AACzD,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,sBAAsB,8BAA8B;AACpD,yBAAyB;AACzB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnFA;AAAA;AAAA;;AAEA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5FA;AAAA;AAAA;AAAA;AAAqF;AAC3B;AACL;;;AAGrD;AACuF;AACvF,gBAAgB,2GAAU;AAC1B,EAAE,4EAAM;AACR,EAAE,iFAAM;AACR,EAAE,0FAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAAgK,CAAgB,0OAAG,EAAC,C;;;;;;;;;;;;ACApL;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACAA,uC;;;;;;;;;;;;ACCA;AAAA;AAAA;AAEA,IAAIA,cAAc,GAAG;AACjBC,SAAO,EAAE,iBAAUC,GAAV,EAAe;AACpB,QAAIA,GAAG,CAACC,qBAAR,EAA+B;AAC3B;AACH;;AAEDD,OAAG,CAACC,qBAAJ,GAA4B,IAA5B;AAEAD,OAAG,CAACE,SAAJ,CAAc,iBAAd,EAAiCC,mDAAjC;AACH;AATgB,CAArB;;AAYA,IAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACJ,GAA5C,EAAiD;AAC7CA,KAAG,CAACK,GAAJ,CAAQP,cAAR;AACH;;AAEcA,6EAAf,E,CAGA;AACA;AACA;AACA;AACA;AACA;AACA,I;;;;;;;;;;;AC5BA,uC;;;;;;;;;;;ACAA,mE;;;;;;;;;;;ACAA,oE;;;;;;;;;;;ACAA,sE;;;;;;;;;;;ACAA,0D;;;;;;;;;;;ACAA,uD;;;;;;;;;;;ACAA,iE;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,mC","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","<template>\n    <div :class=\"['v-md-container', css,{'v-md-auto-resize': height=='auto' }]\" :id=\"uid('container')\">\n        <div :id=\"uid('toolbar')\" class=\"v-md-toolbar\">\n            <div class=\"btn-group mr-3\" role=\"group\" v-for=\"group in toolbars\">\n                <button type=\"button\" :id=\"uid(i.id)\" :title=\"i.title\" :class=\"[buttonClass, {'ready': i.ready}]\"\n                    v-on:click=\"command(i.cmd)\" v-for=\"i in group\"><i :class=\"i.className\"\n                        aria-hidden=\"true\"></i></button>\n            </div>\n        </div>\n        <div class=\"v-md-wrapper\">\n            <textarea :id=\"uid('input')\" v-model=\"value\" :name=\"name\" :style=\"styles\"></textarea>\n            <div class=\"v-md-preview\" :id=\"uid('html-preview')\" v-if=\"preview\" v-html=\"html\">\n            </div>\n        </div>\n\n    </div>\n</template>\n\n\n\n<script>\n\n    import 'codemirror/lib/codemirror.css';\n    import './index.css';\n\n    import Markdown from 'markdownparser';\n    import Marked from 'marked';\n    import CodeMirror from 'codemirror';\n    import 'codemirror/addon/display/fullscreen.js';\n    import 'codemirror/mode/markdown/markdown.js';\n    import 'codemirror/mode/gfm/gfm.js';\n    import 'codemirror/addon/display/placeholder.js';\n    import 'codemirror/addon/selection/active-line.js';\n\n\n    export default {\n        props: {\n\n            css: {\n                type: String\n            },\n            width: {\n                type: String,\n                default: '100%'\n            },\n            height: {\n                type: String,\n                default: '300px'\n            },\n            toolbar: {\n                type: String,\n                default: 'clean redo undo | bold italic strikethrough heading | image link | numlist bullist code quote | preview fullscreen'\n            },\n            extend: {\n                type: Object\n\n            },\n            buttons: {\n                type: Object,\n                default: function () {\n\n                    return {\n\n                        'bold': {\n                            title: 'Bold',\n                            className: 'far fa-bold',\n                            cmd: 'bold',\n                            hotkey: 'Ctrl-B'\n                        },\n\n                        'italic': {\n                            title: 'Italic',\n                            className: \"far fa-italic\",\n                            cmd: 'italic',\n                            hotkey: 'Ctrl-I'\n                        },\n\n                        \"strikethrough\": {\n                            cmd: \"strikethrough\",\n                            className: \"far fa-strikethrough\",\n                            title: \"Strikethrough\"\n                        },\n\n                        'heading': {\n                            title: 'Heading',\n                            className: \"far fa-heading\",\n                            cmd: 'heading',\n                            hotkey: 'Ctrl-H'\n                        },\n\n                        'code': {\n                            title: 'Code',\n                            className: \"far fa-code\",\n                            cmd: 'code',\n                            hotkey: 'Ctrl-X'\n                        },\n                        'quote': {\n                            title: 'Quote',\n                            className: \"far fa-quote-left\",\n                            cmd: 'quote',\n                            hotkey: 'Ctrl-Q'\n                        },\n                        'link': {\n                            title: 'Link',\n                            className: \"far fa-link\",\n                            cmd: 'link',\n                            hotkey: 'Ctrl-K'\n                        },\n                        'image': {\n                            title: 'Image',\n                            className: \"far fa-image\",\n                            cmd: 'image',\n                            hotkey: 'Ctrl-P'\n                        },\n                        \"fullscreen\": {\n                            cmd: \"fullscreen\",\n                            className: \"far fa-arrows-alt no-disable no-mobile\",\n                            title: \"Toggle Fullscreen\",\n                            hotkey: 'F11',\n                            ready: true\n                        },\n                        \"preview\": {\n                            cmd: \"preview\",\n                            className: \"far fa-eye no-disable\",\n                            title: \"Toggle Preview\",\n                            hotkey: 'Ctrl-P',\n                            ready: true\n                        },\n\n                        \"clipboard\": {\n                            cmd: \"clipboard\",\n                            className: \"far fa-clipboard\",\n                            title: \"Copy & Markdown Format\",\n                            hotkey: 'Ctrl-V'\n                        },\n\n                        \"clean\": {\n                            cmd: \"clean\",\n                            className: \"far fa-remove-format\",\n                            title: \"Html to markdown\"\n                        },\n\n                        \"undo\": {\n                            cmd: \"undo\",\n                            className: \"far fa-undo\",\n                            title: \"Undo\",\n                            hotkey: 'Ctrl-Z'\n                        },\n\n                        \"redo\": {\n                            cmd: \"redo\",\n                            className: \"far fa-repeat\",\n                            title: \"Redo\",\n                            hotkey: 'Ctrl-Y'\n                        },\n\n                        \"bullist\": {\n                            cmd: \"bullist\",\n                            className: \"far fa-list-ul\",\n                            title: \"Generic List\",\n\n                        },\n                        \"numlist\": {\n                            cmd: \"numlist\",\n                            className: \"far fa-list-ol\",\n                            title: \"Numbered List\"\n                        }\n                    }\n\n                }\n            },\n            name: {\n                type: String,\n                default: 'html'\n            },\n            value: {\n                type: String,\n                default: '',\n                required: false\n            },\n\n            buttonClass: {\n                type: String,\n                default: 'btn btn-outline-secondary'\n            },\n\n\n\n            options: {\n                type: Object,\n                default: function () {\n                    return {\n                        mode: 'gfm',\n                        theme: \"elegent\",\n                        lineNumbers: false,\n                        styleActiveLine: false,\n                        styleSelectedText: true,\n                        lineWrapping: true,\n                        indentWithTabs: true,\n                        autoRefresh: true,\n                        tabSize: 2,\n                        indentUnit: 2,\n                    }\n                }\n            },\n        },\n\n        data() {\n            return {\n                id: 'v-md-editor-' + new Date().getTime(),\n                editor: null,\n                preview: false,\n                html: '',\n                toolbars: [],\n                shortcuts: {},\n\n            }\n        },\n\n        watch: {\n            value(val) {\n                if (val != this.editor.getValue()) {\n                    this.editor.setValue(val);\n                }\n\n            },\n        },\n\n        computed: {\n            styles() {\n                return {\n                    width: isNaN(this.width) ? this.width : this.width + '%',\n                    height: isNaN(this.height) ? this.height : this.height + '%'\n                }\n            },\n\n        },\n\n        methods: {\n            isEmpty: function (s) {\n                return s === null || s === undefined ? true : /^[\\s\\xa0]*$/.test(s);\n            },\n            isUrl: function (s) {\n                return this.isEmpty(s) ? false : s.match(/((http(s)?):\\/\\/[\\w\\.\\/\\-=?#]+)/gi);\n            },\n            format() {\n                var a = arguments[0];\n                for (var i = 1; i <= arguments.length; i++) {\n                    a = a.replace(/%[a-z]/, arguments[i]);\n                }\n                return a; // Make chainable\n\n            },\n            uid(name) {\n                return this.format('%s-%s', this.id, name);\n            },\n            obj(name) {\n                return jQuery('#' + this.uid(name));\n            },\n\n            _toggleBlock(type, start, end) {\n\n                end = this.isEmpty(end) ? start : end;\n                var ed = this.editor;\n                var startPoint = ed.getCursor(\"start\");\n                var endPoint = ed.getCursor(\"end\");\n                var text;\n                var stat = this.state();\n\n                if (stat[type]) {\n\n                    text = ed.getLine(startPoint.line);\n                    start = text.slice(0, startPoint.ch);\n                    end = text.slice(startPoint.ch);\n                    if (type == \"bold\") {\n                        start = start.replace(/(\\*\\*|__)(?![\\s\\S]*(\\*\\*|__))/, \"\");\n                        end = end.replace(/(\\*\\*|__)/, \"\");\n                    } else if (type == \"italic\") {\n                        start = start.replace(/(\\*|_)(?![\\s\\S]*(\\*|_))/, \"\");\n                        end = end.replace(/(\\*|_)/, \"\");\n                    } else if (type == \"strikethrough\") {\n                        start = start.replace(/(\\*\\*|~~)(?![\\s\\S]*(\\*\\*|~~))/, \"\");\n                        end = end.replace(/(\\*\\*|~~)/, \"\");\n                    }\n                    ed.replaceRange(start + end, {\n                        line: startPoint.line,\n                        ch: 0\n                    }, {\n                        line: startPoint.line,\n                        ch: 99999999999999\n                    });\n\n                    if (type == \"bold\" || type == \"strikethrough\") {\n                        startPoint.ch -= 2;\n                        if (startPoint !== endPoint) {\n                            endPoint.ch -= 2;\n                        }\n                    } else if (type == \"italic\") {\n                        startPoint.ch -= 1;\n                        if (startPoint !== endPoint) {\n                            endPoint.ch -= 1;\n                        }\n                    }\n                } else {\n\n                    text = ed.getSelection();\n                    if (type == \"bold\") {\n                        text = text.split(\"**\").join(\"\");\n                        text = text.split(\"__\").join(\"\");\n                    } else if (type == \"italic\") {\n                        text = text.split(\"*\").join(\"\");\n                        text = text.split(\"_\").join(\"\");\n                    } else if (type == \"strikethrough\") {\n                        text = text.split(\"~~\").join(\"\");\n                    }\n                    ed.replaceSelection(start + text + end);\n\n                    startPoint.ch += start.length;\n                    endPoint.ch = startPoint.ch + text.length;\n                }\n\n                ed.setSelection(startPoint, endPoint);\n            },\n\n            _toggleLine(name) {\n                var ed = this.editor;\n                var stat = this.state();\n                var startPoint = ed.getCursor(\"start\");\n                var endPoint = ed.getCursor(\"end\");\n                var repl = {\n                    \"quote\": /^(\\s*)\\>\\s+/,\n                    \"bullist\": /^(\\s*)(\\*|\\-|\\+)\\s+/,\n                    \"numlist\": /^(\\s*)\\d+\\.\\s+/\n                };\n                var map = {\n                    \"quote\": \"> \",\n                    \"bullist\": \"* \",\n                    \"numlist\": \"1. \"\n                };\n                for (var i = startPoint.line; i <= endPoint.line; i++) {\n                    (function (i) {\n                        var text = ed.getLine(i);\n                        if (stat[name]) {\n                            text = text.replace(repl[name], \"$1\");\n                        } else {\n                            text = map[name] + text;\n                        }\n                        ed.replaceRange(text, {\n                            line: i, ch: 0\n                        }, {\n                            line: i, ch: 99999999999999\n                        });\n                    })(i);\n                }\n\n            },\n\n            state(pos) {\n                pos = pos || this.editor.getCursor(\"start\");\n                var stat = this.editor.getTokenAt(pos);\n                if (!stat.type) return {};\n\n                var types = stat.type.split(\" \");\n\n                // console.log(types);\n\n                var ret = {},\n                    data, text;\n                for (var i = 0; i < types.length; i++) {\n                    data = types[i];\n                    if (data === \"strong\") {\n                        ret.bold = true;\n                    } else if (data === \"variable-2\") {\n                        text = this.editor.getLine(pos.line);\n                        if (/^\\s*\\d+\\.\\s/.test(text)) {\n                            ret[\"numlist\"] = true;\n                        } else {\n                            ret[\"bullist\"] = true;\n                        }\n                    } else if (data === \"atom\") {\n                        ret.quote = true;\n                    } else if (data === \"em\") {\n                        ret.italic = true;\n                    } else if (data === \"quote\") {\n                        ret.quote = true;\n                    } else if (data === \"strikethrough\") {\n                        ret.strikethrough = true;\n                    } else if (data === \"comment\") {\n                        ret.code = true;\n                    } else if (data === \"link\" || data === \"url\") {\n                        ret.link = true;\n                    } else if (data === \"image\") {\n                        ret.image = true;\n                    } else if (data.match(/^header(\\-[1-6])?$/)) {\n                        ret[data.replace(\"header\", \"heading\")] = true;\n                    }\n                }\n                return ret;\n            },\n\n            _replaceSelection(active, startEnd, val) {\n                var ed = this.editor;\n\n                var text;\n                var start = startEnd[0];\n                var end = startEnd[1];\n                var startPoint = ed.getCursor(\"start\");\n                var endPoint = ed.getCursor(\"end\");\n                if (val) {\n                    Object.keys(val).forEach(key => {\n                        start = start.replace('#' + key + '#', val[key]);\n                        end = end.replace('#' + key + '#', val[key]);\n                    });\n                }\n\n                if (active) {\n                    text = ed.getLine(startPoint.line);\n                    start = text.slice(0, startPoint.ch);\n                    end = text.slice(startPoint.ch);\n                    ed.replaceRange(start + end, {\n                        line: startPoint.line,\n                        ch: 0\n                    });\n                } else {\n                    // text = ed.getSelection();\n                    // ed.replaceSelection(start + text + end);\n                    ed.replaceSelection(start + end);\n\n                    startPoint.ch += start.length;\n                    if (startPoint !== endPoint) {\n                        endPoint.ch += start.length;\n                    }\n                }\n                ed.setSelection(startPoint, endPoint);\n                ed.focus();\n\n            },\n\n            drawImage(obj) {\n                var stat = this.state();\n                this._replaceSelection(stat.image, [\"![#title#](\", '#url# \"#title#\")'], obj);\n            },\n\n            drawLink(obj) {\n                var stat = this.state();\n                this._replaceSelection(stat.link, ['[#title#]', '(#url# \"#title#\")'], obj);\n            },\n\n            command(key) {\n\n                var ed = this.editor;\n                var text = ed.getSelection();\n                var stat = this.state();\n\n                this.$root.$emit('markdown-editor:' + key, this);\n\n                switch (key) {\n                    case 'undo':\n                        ed.undo();\n                        break;\n\n                    case 'redo':\n                        ed.redo();\n                        break;\n\n                    case 'bold':\n                        this._toggleBlock('bold', '**');\n                        break;\n\n                    case 'italic':\n                        this._toggleBlock('italic', '*');\n                        break;\n\n                    case 'strikethrough':\n                        this._toggleBlock('strikethrough', '~~');\n                        break;\n\n                    case 'code':\n                        this._toggleBlock('code', '```');\n                        break;\n\n\n                    case 'heading':\n                        ed.replaceSelection('\\n### ' + text);\n                        break;\n\n                    case 'clipboard':\n                        this.obj('modal-clipboard').modal('show');\n                        break;\n\n                    case 'image':\n                        // this.obj('modal-image').modal('show');\n\n                        var url = prompt(\"Please enter image url\", \"https://\");\n                        if (this.isUrl(url)) {\n                            var title = !this.isEmpty(text) ? text : \"This is image title\";\n                            this.drawImage({ title: title, url: url });\n                        }\n                        break;\n\n                    case 'link':\n                        //this.obj('modal-link').modal('show');\n\n                        var url = prompt(\"Please enter link\", \"https://\");\n                        if (this.isUrl(url)) {\n                            var title = !this.isEmpty(text) ? text : url;\n                            this.drawLink({ title: title, url: url });\n\n                        }\n\n                        break;\n\n                    case 'quote':\n                        this._toggleLine('quote');\n                        break;\n\n                    case 'quote':\n                        this._toggleLine('quote');\n                        break;\n\n                    case 'numlist':\n                        this._toggleLine('numlist');\n                        break;\n\n                    case 'bullist':\n                        this._toggleLine('bullist');\n                        break;\n\n                    case 'preview':\n\n                        ///var md = new MarkdownIt({ typographer: true, breaks: true, quotes: '“”‘’' });\n\n                        this.html = Marked(ed.getValue(), { breaks: true });\n                        this.preview ^= true;\n\n                        this.obj('toolbar').find('.btn:not(\".ready\")').prop('disabled', this.preview);\n\n                        break;\n\n                    case 'fullscreen':\n\n                        this.obj('container').toggleClass('v-md-fullscreen');\n                        this.obj('fullscreen').toggleClass('active');\n                        ed.setOption(\"fullScreen\", !ed.getOption(\"fullScreen\"));\n\n                        break;\n\n                    case 'clean':\n                        text = Markdown.parse(text);\n                        ed.replaceSelection(text);\n\n                        break;\n\n                }\n\n                ed.focus();\n\n            },\n\n\n\n\n\n            build() {\n\n                if (!jQuery) {\n\n                    console.error(\"Must required jQuery!\");\n                    return;\n                }\n\n                if (this.isEmpty(this.toolbar)) {\n                    console.error(\"You must set toolbar!\");\n                    return;\n                }\n\n                if (this.__rendered) return;\n\n                var _t = this;\n\n                this.buttons = Object.assign(this.buttons, this.extend);\n\n                var btns = _t.toolbar.toLowerCase().split(/(\\s)/).filter(function (w) {\n                    return !_t.isEmpty(w);\n                });\n\n\n                var group = [];\n                for (var i = 0; i < btns.length; i++) {\n                    var btn = btns[i];\n                    var obj = _t.buttons[btn];\n                    if (obj) {\n                        // obj.cmd = typeof obj.cmd ==='function'? obj.cmd: this.command(obj.cmd);\n                        obj.id = btn;\n                        group.push(obj);\n\n                    }\n                    if (btn === '|' || i == btns.length - 1) {\n                        this.toolbars.push(group);\n                        group = [];\n                    }\n                }\n\n\n                var o = Object.assign({}, { extraKeys: _t.shortcuts, initialValue: _t.value }, _t.options);\n                var el = document.getElementById(_t.id + '-input');\n                _t.editor = CodeMirror.fromTextArea(el, o);\n                _t.editor.on(\"change\", function (ed) {\n                    //_t.editor.save();                    \n                    _t.$emit('input', ed.getValue());\n                    //_t.value = ed.getValue();\n                });\n\n                _t.editor.on(\"cursorActivity\", function () {\n                    var stat = _t.state();\n\n                    _t.obj('toolbar').find('.btn.active:not(.ready)').removeClass('active');\n                    Object.keys(stat).forEach(key => {\n                        _t.obj(key).addClass('active');\n\n                    });\n                });\n\n                _t.__rendered = true;\n\n\n            }\n        },\n        mounted() {\n\n            this.$nextTick(() => { this.build(); });\n\n        },\n        destroyed() {\n            this.editor = null;\n        }\n\n    }\n\n</script>","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      class: [\n        \"v-md-container\",\n        _vm.css,\n        { \"v-md-auto-resize\": _vm.height == \"auto\" }\n      ],\n      attrs: { id: _vm.uid(\"container\") }\n    },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"v-md-toolbar\", attrs: { id: _vm.uid(\"toolbar\") } },\n        _vm._l(_vm.toolbars, function(group) {\n          return _c(\n            \"div\",\n            { staticClass: \"btn-group mr-3\", attrs: { role: \"group\" } },\n            _vm._l(group, function(i) {\n              return _c(\n                \"button\",\n                {\n                  class: [_vm.buttonClass, { ready: i.ready }],\n                  attrs: { type: \"button\", id: _vm.uid(i.id), title: i.title },\n                  on: {\n                    click: function($event) {\n                      return _vm.command(i.cmd)\n                    }\n                  }\n                },\n                [\n                  _c(\"i\", {\n                    class: i.className,\n                    attrs: { \"aria-hidden\": \"true\" }\n                  })\n                ]\n              )\n            }),\n            0\n          )\n        }),\n        0\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"v-md-wrapper\" }, [\n        _c(\"textarea\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.value,\n              expression: \"value\"\n            }\n          ],\n          style: _vm.styles,\n          attrs: { id: _vm.uid(\"input\"), name: _vm.name },\n          domProps: { value: _vm.value },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.value = $event.target.value\n            }\n          }\n        }),\n        _vm._v(\" \"),\n        _vm.preview\n          ? _c(\"div\", {\n              staticClass: \"v-md-preview\",\n              attrs: { id: _vm.uid(\"html-preview\") },\n              domProps: { innerHTML: _vm._s(_vm.html) }\n            })\n          : _vm._e()\n      ])\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./editor.vue?vue&type=template&id=7c83f806&\"\nimport script from \"./editor.vue?vue&type=script&lang=js&\"\nexport * from \"./editor.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/nasa8x/nasa/projects/nodejs/v-markdown-editor/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('7c83f806')) {\n      api.createRecord('7c83f806', component.options)\n    } else {\n      api.reload('7c83f806', component.options)\n    }\n    module.hot.accept(\"./editor.vue?vue&type=template&id=7c83f806&\", function () {\n      api.rerender('7c83f806', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/editor.vue\"\nexport default component.exports","import mod from \"-!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=script&lang=js&\"","export * from \"-!../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/vue-loader/lib/index.js??vue-loader-options!./editor.vue?vue&type=template&id=7c83f806&\"","// extracted by mini-css-extract-plugin","\nimport Editor from './editor.vue';\n\nvar MarkdownEditor = {\n    install: function (Vue) {\n        if (Vue.__md_editor_installed) {\n            return;\n        }\n\n        Vue.__md_editor_installed = true;\n\n        Vue.component('markdown-editor', Editor);\n    }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n    Vue.use(MarkdownEditor);\n}\n\nexport default MarkdownEditor;\n\n\n// if (typeof exports == \"object\") {\n//     module.exports = MarkdownEditor;\n// } else if (typeof define == \"function\" && define.amd) {\n//     define([], function () { return MarkdownEditor; })\n// } else if (window.Vue) {\n//     Vue.use(MarkdownEditor);\n// }","module.exports = require(\"codemirror\");","module.exports = require(\"codemirror/addon/display/fullscreen.js\");","module.exports = require(\"codemirror/addon/display/placeholder.js\");","module.exports = require(\"codemirror/addon/selection/active-line.js\");","module.exports = require(\"codemirror/lib/codemirror.css\");","module.exports = require(\"codemirror/mode/gfm/gfm.js\");","module.exports = require(\"codemirror/mode/markdown/markdown.js\");","module.exports = require(\"markdownparser\");","module.exports = require(\"marked\");"],"sourceRoot":""}